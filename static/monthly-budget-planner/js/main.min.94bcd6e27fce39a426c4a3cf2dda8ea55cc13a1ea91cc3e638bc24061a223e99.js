const APP_VERSION="1.0.1";function getVersion(){return APP_VERSION}let monthlyTakeHome,budgetPieChart,savingsChart,nextCategoryId=1;function calculateTaxAdjusted(){const n=document.getElementById("annual-gross-income"),o=document.getElementById("additional-tax-rate");let e=parseFloat(n.value),i=parseFloat(o.value)||0;(e!=e||e<0)&&(e=0,n.value=0);const a=15e3,r=[{min:0,max:11925,rate:.1},{min:11925,max:48475,rate:.12},{min:48475,max:103350,rate:.22},{min:103350,max:197300,rate:.24},{min:197300,max:250525,rate:.32},{min:250525,max:626350,rate:.35},{min:626350,max:1/0,rate:.37}],t=Math.max(0,e-a);let s=0;for(const e of r)if(t>e.min){const n=Math.min(t,e.max)-e.min;s+=n*e.rate}const c=Math.min(e*.062,168600*.062),l=e*.0145,d=t*(i/100),u=s+c+l+d;monthlyTakeHome=(e-u)/12,updateSummary()}const CategoryType={EXPENSE:"expense",SAVINGS:"savings"};function getNextCategoryId(){return nextCategoryId++}function getCategories(){const t=document.querySelectorAll("#categories-list .category-item"),e=[{id:-1,name:"n/a"}];return t.forEach(t=>{const s=t.querySelector('input[type="text"]'),n=s.value.trim();if(n){let s=t.dataset.categoryId;s||(s=getNextCategoryId(),t.dataset.categoryId=s),e.push({id:parseInt(s),name:n})}}),e}function addCategory(e="",t=CategoryType.EXPENSE){const a=document.getElementById("categories-list"),n=document.createElement("div"),s=getNextCategoryId();n.className="category-item",n.dataset.categoryId=s,n.innerHTML=`
        <div class="drag-handle"></div>
        <input type="text" placeholder="Category Name" value="${e}" />
        <select class="category-type">
            <option value="expense" ${t===CategoryType.EXPENSE?"selected":""}>Expense</option>
            <option value="savings" ${t===CategoryType.SAVINGS?"selected":""}>Savings</option>
        </select>
        <span class="category-type-display">${t===CategoryType.SAVINGS?"Savings":"Expense"}</span>
        <button class="delete-btn" onclick="removeCategory(this)">
            <span class="material-symbols-outlined">delete</span>
        </button>
    `,a.appendChild(n);const o=n.querySelector("input"),i=n.querySelector(".category-type"),r=n.querySelector(".category-type-display");return o.addEventListener("input",()=>{updateAllocationCategories(),updateSummary()}),o.addEventListener("blur",()=>{updateAllocationCategories(),updateSummary()}),i.addEventListener("change",()=>{r.textContent=i.value==="savings"?"Savings":"Expense",updateAllocationCategories(),updateSummary()}),updateAllocationCategories(),s}function removeCategory(e){e.parentElement.remove(),updateAllocationCategories(),updateSummary()}function updateAllocationCategories(){const e=getCategories();document.querySelectorAll(".allocation-category").forEach(t=>{const n=parseInt(t.value),s=t.parentElement.querySelector(".allocation-category-display");if(t.innerHTML="",e.forEach(e=>{const n=document.createElement("option");n.value=e.id,n.textContent=e.name,t.appendChild(n)}),e.find(e=>e.id===n)){t.value=n;const o=e.find(e=>e.id===n);s&&o&&(s.textContent=o.name)}})}function addAllocation(e="",t=-1,n=0,s="monthly"){const a=getCategories(),c=document.getElementById("allocations-list"),o=document.createElement("div");o.className="allocation-item",o.innerHTML=`
        <div class="drag-handle"></div>
        <input type="text" placeholder="Name" class="allocation-name" value="${e}" />
        <select class="allocation-category">
            ${a.map(e=>`<option value="${e.id}" ${e.id===t?"selected":""}>${e.name}</option>`).join("")}
        </select>
        <span class="allocation-category-display">${a.find(e=>e.id===t)?.name||"n/a"}</span>
        <input type="number" placeholder="Amount" class="allocation-amount" value="${n}" />
        <select class="allocation-frequency">
            <option value="monthly" ${s==="monthly"?"selected":""}>Monthly</option>
            <option value="annual" ${s==="annual"?"selected":""}>Annual</option>
            <option value="semi-annual" ${s==="semi-annual"?"selected":""}>Semi-Annual</option>
            <option value="bimonthly" ${s==="bimonthly"?"selected":""}>Bi-Monthly</option>
        </select>
        <span class="allocation-frequency-display">${s.charAt(0).toUpperCase()+s.slice(1)}</span>
        <button class="delete-btn" onclick="removeAllocation(this)">
            <span class="material-symbols-outlined">delete</span>
        </button>
    `,c.appendChild(o),o.querySelectorAll("input, select").forEach(e=>{e.addEventListener("input",updateSummary),e.addEventListener("change",updateSummary)});const r=o.querySelector(".allocation-category"),i=o.querySelector(".allocation-frequency"),l=o.querySelector(".allocation-category-display"),d=o.querySelector(".allocation-frequency-display");r.addEventListener("change",()=>{const t=getCategories(),e=t.find(e=>e.id===parseInt(r.value));l.textContent=e?e.name:"n/a"}),i.addEventListener("change",()=>{d.textContent=i.value.charAt(0).toUpperCase()+i.value.slice(1)}),updateSummary()}function removeAllocation(e){e.parentElement.remove(),updateSummary()}function getAllocationsData(){const o=document.querySelectorAll(".allocation-item"),i=getCategories(),a=Object.fromEntries(i.map(e=>[e.id,e.name])),e={},t={};let n=0,s=0;return o.forEach(o=>{const h=o.querySelector(".allocation-name").value||"Unnamed",d=parseInt(o.querySelector(".allocation-category").value),i=parseFloat(o.querySelector(".allocation-amount").value)||0,u=o.querySelector(".allocation-frequency").value;let r=0,c=0;switch(u){case"monthly":r=i,c=i*12;break;case"annual":r=i/12,c=i;break;case"semi-annual":r=i/6,c=i*2;break;case"bimonthly":r=i/2,c=i*6;break}u!=="monthly"&&(s+=r);const l=d===-1?h:a[d];e[l]=(e[l]||0)+r,t[l]=(t[l]||0)+c,n+=r}),{monthlyAllocations:e,annualAllocations:t,totalMonthly:n,monthlySetaside:s}}function getAnnualGrossIncome(){return parseFloat(document.getElementById("annual-gross-income").value)||0}function getMonthlyGrossIncome(){const e=getAnnualGrossIncome();return e/12}function updateSummary(){const l=getAnnualGrossIncome(),h=getMonthlyGrossIncome(),{monthlyAllocations:o,annualAllocations:m,totalMonthly:d,monthlySetaside:c}=getAllocationsData(),r=getSavingsCategories();let n=0,t=0;Object.entries(o).forEach(([e,s])=>{r.includes(e)?t+=s:n+=s});let a=n*12;const e=monthlyTakeHome-d,i=t+e,u=i*12;document.getElementById("summary-annual-gross").textContent=`$${l.toFixed(2)}`,document.getElementById("summary-monthly-gross").textContent=`$${h.toFixed(2)}`,document.getElementById("summary-income").textContent=`$${monthlyTakeHome.toFixed(2)}`,document.getElementById("summary-annual-expenses").textContent=`$${a.toFixed(2)}`,document.getElementById("summary-expenses").textContent=`$${n.toFixed(2)}`,document.getElementById("summary-setaside").textContent=`$${c.toFixed(2)}`,document.getElementById("summary-annual-savings").textContent=`$${(t*12).toFixed(2)}`,document.getElementById("summary-savings").textContent=`$${t.toFixed(2)}`,document.getElementById("summary-annual-cash-flow").textContent=`$${u.toFixed(2)}`,document.getElementById("summary-cash-flow").textContent=`$${i.toFixed(2)}`;const s={...o};e>0&&(s.Remaining=e),updateBudgetPieChart(s),updateSavingsChart(e)}function updateBudgetPieChart(e){const a=document.getElementById("budget-pie-chart").getContext("2d");budgetPieChart&&budgetPieChart.destroy();const n=Object.keys(e),s=Object.values(e),r=generateColors(n.length),t=s.reduce((e,t)=>e+t,0),{monthlyAllocations:o,annualAllocations:c}=getAllocationsData(),i=monthlyTakeHome-Object.values(o).reduce((e,t)=>e+t,0);budgetPieChart=new Chart(a,{type:"pie",data:{labels:n,datasets:[{data:s,backgroundColor:r,borderWidth:2,borderColor:"#fff"}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"bottom"},tooltip:{callbacks:{label:function(e){const n=e.label,r=e.parsed,l=(r/t*100).toFixed(1);let s,a;return n==="Remaining"?(s=i,a=i*12):(s=o[n]||0,a=c[n]||0),[`${n}: ${l}%`,`Monthly: $${s.toLocaleString()}`,`Annual: $${a.toLocaleString()}`]}}},datalabels:{color:"#000",font:{weight:"bold",size:14},formatter:function(e){const s=e/t*100;return s>5?Math.round(s)+"%":""}}}},plugins:[{afterDatasetsDraw:function(e){const n=e.ctx;e.data.datasets.forEach((s,o)=>{const i=e.getDatasetMeta(o);i.data.forEach((e,o)=>{const i=s.data[o]/t*100;if(i>5){const{x:t,y:s}=e.tooltipPosition();n.fillStyle="#000",n.font="bold 14px Arial",n.textAlign="center",n.textBaseline="middle",n.fillText(Math.round(i)+"%",t,s)}})})}}]})}function updateSavingsChart(e){const r=document.getElementById("savings-chart").getContext("2d");savingsChart&&savingsChart.destroy();const c=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],{monthlyAllocations:i,annualAllocations:h}=getAllocationsData(),l=getSavingsCategories(),o=[],n=["#667eea","#38b2ac","#f093fb","#4facfe","#43e97b","#ffecd2"];let s=0;const d=Object.values(i).reduce((e,t)=>e+t,0),u=monthlyTakeHome-d,a=[];for(let e=1;e<=12;e++)a.push(u*e);if(o.push({label:"Net Cash Flow",data:a,borderColor:"#2d3748",backgroundColor:"#2d374820",borderWidth:3,tension:.4}),e>0){const t=[];for(let n=1;n<=12;n++)t.push(e*n);o.push({label:"Unallocated Savings",data:t,borderColor:n[s],backgroundColor:n[s]+"20",tension:.4}),s++}l.forEach(e=>{const t=i[e]||0;if(t>0){const i=[];for(let e=1;e<=12;e++)i.push(t*e);o.push({label:e,data:i,borderColor:n[s%n.length],backgroundColor:n[s%n.length]+"20",tension:.4}),s++}}),savingsChart=new Chart(r,{type:"line",data:{labels:c,datasets:o},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!1,ticks:{callback:function(e){return"$"+e.toLocaleString()}}}},plugins:{legend:{position:"bottom"}}}})}function getSavingsCategories(){const t=document.querySelectorAll(".category-item"),e=[];return t.forEach(t=>{const n=t.querySelector('input[type="text"]').value.trim(),s=t.querySelector(".category-type").value;n&&s==="savings"&&e.push(n)}),e}function generateColors(e){const t=["#667eea","#764ba2","#f093fb","#f5576c","#4facfe","#00f2fe","#43e97b","#38f9d7","#ffecd2","#fcb69f","#a8edea","#fed6e3"],n=[];for(let s=0;s<e;s++)n.push(t[s%t.length]);return n}document.addEventListener("DOMContentLoaded",function(){const n=document.getElementById("version-link");n.innerHTML=`<a href="https://github.com/greenmatthew/monthly-budget-planner/releases/tag/v${getVersion()}"><small>v${getVersion()}</small></a>`,document.getElementById("annual-gross-income").value=75e3,calculateTaxAdjusted();const e=addCategory("Housing",CategoryType.EXPENSE),s=addCategory("Retirement Savings",CategoryType.SAVINGS);addAllocation("Rent",e,1500),addAllocation("Renter's Insurance",e,25),addAllocation("Home Insurance",e,125),addAllocation("Roth IRA",s,500),addAllocation("Example Item",-1,50),document.getElementById("annual-gross-income").addEventListener("input",function(){calculateTaxAdjusted()}),document.getElementById("annual-gross-income").addEventListener("blur",function(){calculateTaxAdjusted()}),document.getElementById("additional-tax-rate").addEventListener("input",calculateTaxAdjusted),document.getElementById("additional-tax-rate").addEventListener("blur",calculateTaxAdjusted);let t;window.addEventListener("resize",function(){clearTimeout(t),t=setTimeout(()=>{budgetPieChart&&budgetPieChart.resize(),savingsChart&&savingsChart.resize(),updateSummary()},150)}),updateSummary(),new Sortable(document.getElementById("categories-list"),{handle:".drag-handle",animation:150,ghostClass:"sortable-ghost",chosenClass:"sortable-chosen"}),new Sortable(document.getElementById("allocations-list"),{handle:".drag-handle",animation:150,ghostClass:"sortable-ghost",chosenClass:"sortable-chosen"})})